pipeline {
  environment {
        registry = 'olvmky/reimb-api'
        dockerHubCreds = 'docker_hub'
        dockerImage = ''
  }
  
  agent any
  stages {
    stage('Test') {
      steps {
        withMaven {
            sh 'mvn -f projectOne/pom.xml test'
        }
      }
    }
    
    stage('Build') {
          when {
             branch 'main'
          }
          steps {
            withMaven {

              sh 'mvn -f projectOne/pom.xml clean install'
              sh 'mvn -f projectOne/pom.xml clean package -DskipTests'

            }
          }
    }
    
    stage('Docker Build') {
           when {
               branch 'main'
           }
           steps {
               script {
                  echo "$registry:$currentBuild.number"
                  dockerImage = docker.build ("$registry", "-f projectOne/Dockerfile .")
               }
           }
       }

    stage('Docker Deliver') {
      when {
        branch 'main'
      }
      steps {
        script {
          docker.withRegistry('',dockerHubCreds) {
                    dockerImage.push()
          }
        }
      }
    }
//     stage('Wait for approval') {
//             when {
//                 branch 'main'
//             }
//             steps {
//                 script {
//                     try {
//                         timeout(time: 1, unit: 'MINUTES') {
//                             approved = input message: 'Deploy to production?', ok: 'Continue',
//                                                parameters: [choice(name: 'approved', choices: 'Yes\nNo', description: 'Deploy build to production')]
//                             if(approved != 'Yes') {
//                                 error('Build did not pass approval')
//                             }
//                         }
//                     } catch(error) {
//                         error('Build failed because timeout was exceeded')
//                     }
//                 }
//             }
//     }

    stage('Deploy to GKE') {
            when {
                branch 'main'
            }
            steps{
               sh 'sed -i "s/%TAG%/$BUILD_NUMBER/g" ./projectOne/k8s/deployment.yml'
               sh 'cat ./projectOne/k8s/deployment.yml'
               step([$class: 'KubernetesEngineBuilder',
                    projectId: 'active-road-343813',
                    clusterName: 'active-road-343813-gke',
                    zone: 'us-central1',
                    manifestPattern: 'projectOne/k8s/',
                    credentialsId: 'active-road-343813',
                    verifyDeployments: true
               ])

               cleanWs()

//                discordSend description: "Build #$currentBuild.number",
//                     link: BUILD_URL, result: currentBuild.currentResult,
//                     title: JOB_NAME,
//                     webhookURL: "https://discord.com/api/webhooks/946097550514061343/7IRGxvAsw24cbGPIHXE15gtxCvzQQtRl3e5DEcm7arQpC6x3cVJPXXWZo7UWHKyJumuW"
            }
    }

  }
}
